AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Spanda's backend implemented in the Serverless Application Model.

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Parameters:
  FinAPIClientId:
    Description: The client id to use to access FinAPI
    Type: String
  FinAPIClientSecret:
    Description: The client secret to use to access FinAPI
    Type: String
  DatabaseUser:
    Description: Username of SQL database
    Type: String
  DatabasePassword:
    Description: Password of SQL database
    Type: String
  Stage:
    Description: The deployment stage
    Type: String

# Globals is a section in your SAM template to define properties common to all your Serverless Function and APIs.
# All the AWS::Serverless::Function and AWS::Serverless::Api resources will inherit the properties defined here.
Globals:
  Function:
    Timeout: 45
    Environment:
      Variables:
        LOGGER_LEVEL: "debug"
        FINAPI_URL: "https://sandbox.finapi.io"
        FINAPI_CLIENT_ID: !Ref FinAPIClientId
        FINAPI_CLIENT_SECRET: !Ref FinAPIClientSecret
        FINAPI_TIMEOUT: 3000
        PGDATABASE: "postgres"
        PGHOST: !Sub "spanda-database.ctezy0xj9lfh.${AWS::Region}.rds.amazonaws.com"
        PGPORT: "5432"
        PGUSER: !Ref DatabaseUser
        PGPASSWORD: !Ref DatabasePassword

Resources:
  IsUserAuthenticatedFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: spanda/
      Handler: api.isUserAuthenticated
      Runtime: nodejs10.x
      Events:
        GetAuthorization:
          Type: Api
          Properties:
            Path: /users
            Method: get
  RegisterUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: spanda/
      Handler: api.registerUser
      Runtime: nodejs10.x
      Policies:
        - AWSLambdaBasicExecutionRole # Managed Policy
        - Version: '2012-10-17' # Policy Document
          Statement:
            - Effect: Allow
              Action:
                - ec2:CreateNetworkInterface
                - ec2:DescribeNetworkInterfaces
                - ec2:DeleteNetworkInterface
              Resource: '*'
      VpcConfig:
        SecurityGroupIds:
          - sg-0d4fd718b2a6a5377
        SubnetIds:
          - subnet-5a064f17
          - subnet-a1c2b9dc
          - subnet-e0dcd08b
      Events:
        PostCredentials:
          Type: Api
          Properties:
            Path: /users
            Method: post
  AuthenticateAndSaveUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: spanda/
      Handler: api.authenticateAndSaveUser
      Runtime: nodejs10.x
      Events:
        PostLogin:
          Type: Api
          Properties:
            Path: /oauth/login
            Method: post
  UpdateRefreshTokenFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: spanda/
      Handler: api.updateRefreshToken
      Runtime: nodejs10.x
      Events:
        PostRefreshToken:
          Type: Api
          Properties:
            Path: /oauth/token
            Method: post
  GetBankByBLZFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: spanda/
      Handler: api.getBankByBLZ
      Runtime: nodejs10.x
      Events:
        GetBankByBLZ:
          Type: Api
          Properties:
            Path: /banks/{blz}
            Method: get
  GetWebFormIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: spanda/
      Handler: api.getWebFormId
      Runtime: nodejs10.x
      Events:
        PostBankId:
          Type: Api
          Properties:
            Path: /bankConnections/import
            Method: post
  FetchWebFormInfoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: spanda/
      Handler: api.getWebFormInfo
      Runtime: nodejs10.x
      Events:
        GetWebFormId:
          Type: Api
          Properties:
            Path: /webForms/{webFormId}
            Method: get
  GetAllowanceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: spanda/
      Handler: api.getAllowance
      Runtime: nodejs10.x
      Events:
        GetAllowance:
          Type: Api
          Properties:
            Path: /allowance
            Method: get

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  SpandaAPI:
    Description: "API gateway endpoint URL for the stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}"
  IsUserAuthenticatedFunction:
    Description: "Is User Authenticated Function ARN"
    Value: !GetAtt IsUserAuthenticatedFunction.Arn
  RegisterUserFunction:
    Description: "Register User Function ARN"
    Value: !GetAtt RegisterUserFunction.Arn
  UpdateRefreshTokenFunction:
    Description: "Update Refresh Token Function ARN"
    Value: !GetAtt UpdateRefreshTokenFunction.Arn
  AuthenticateAndSaveUserFunction:
    Description: "Authenticate and Save User Function ARN"
    Value: !GetAtt AuthenticateAndSaveUserFunction.Arn
  GetBankByBLZFunction:
    Description: "Get Bank by BLZ Function ARN"
    Value: !GetAtt GetBankByBLZFunction.Arn
  GetWebFormIdFunction:
    Description: "Get Webform ID Function ARN"
    Value: !GetAtt GetWebFormIdFunction.Arn
  FetchWebFormInfoFunction:
    Description: "Fetch WebForm Info Function ARN"
    Value: !GetAtt FetchWebFormInfoFunction.Arn
  GetAllowanceFunction:
    Description: "Get Allowance Function ARN"
    Value: !GetAtt GetAllowanceFunction.Arn
