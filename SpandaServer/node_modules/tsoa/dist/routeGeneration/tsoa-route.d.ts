import { Tsoa } from './../metadataGeneration/tsoa';
/**
 * For Swagger, additionalProperties is implicitly allowed. So use this function to clarify that undefined should be associated with allowing additional properties
 * @param test if this is undefined then you should interpret it as a "yes"
 */
export declare function isDefaultForAdditionalPropertiesAllowed(test: TsoaRoute.ModelSchema['additionalProperties']): test is undefined;
export declare namespace TsoaRoute {
    interface Models {
        [name: string]: ModelSchema;
    }
    interface ModelSchema {
        enums?: string[];
        properties?: {
            [name: string]: PropertySchema;
        };
        additionalProperties?: boolean | PropertySchema;
    }
    type ValidatorSchema = Tsoa.Validators;
    interface PropertySchema {
        dataType?: Tsoa.TypeStringLiteral;
        ref?: string;
        required?: boolean;
        array?: PropertySchema;
        enums?: string[];
        validators?: ValidatorSchema;
        default?: any;
    }
    interface ParameterSchema extends PropertySchema {
        name: string;
        in: string;
    }
    interface Security {
        [key: string]: string[];
    }
}
