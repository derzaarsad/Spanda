# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master
# specific path build
pr:
  branches:
    include:
    - master
    - releases/*
  paths:
    include:
    - '*'
    exclude:
    - README.md
    - .github/*
    - .gitignore

pool:
  vmImage: 'ubuntu-18.04'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
  displayName: 'Install Node.js'
- script: |
    cd SpandaServerless/spanda
    npm ci
  displayName: 'npm install and build'
  continueOnError: false
- script: |
    cd SpandaServerless/spanda
    npm test
  displayName: 'Run unit tests'
  continueOnError: true
- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testRunner: JUnit
    testResultsFiles: '$(System.DefaultWorkingDirectory)/SpandaServerless/spanda/test-results.xml'
- script: |
    curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
    unzip awscli-bundle.zip
    sudo ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
    mkdir ~/.aws
    touch ~/.aws/config
    echo "[default]" >> ~/.aws/config
    echo "region = $(AWS_REGION)" >> ~/.aws/config
    echo "output = json" >> ~/.aws/config
    touch ~/.aws/credentials
    echo "[default]" >> ~/.aws/credentials
    echo "aws_access_key_id = $(AWS_ACCESS_KEY)" >> ~/.aws/credentials
    echo "aws_secret_access_key = $(AWS_SECRET_KEY)" >> ~/.aws/credentials
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh)"
    test -d ~/.linuxbrew && eval $(~/.linuxbrew/bin/brew shellenv)
    test -d /home/linuxbrew/.linuxbrew && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
    test -r ~/.bash_profile && echo "eval \$($(brew --prefix)/bin/brew shellenv)" >>~/.bash_profile
    echo "eval \$($(brew --prefix)/bin/brew shellenv)" >>~/.profile
    brew tap aws/tap
    brew install aws-sam-cli
    sam --version
    which sam
  displayName: 'Installing the AWS SAM CLI'
  continueOnError: false
- script: |
    cd $(System.DefaultWorkingDirectory)/SpandaServerless
    cd /home/linuxbrew/.linuxbrew/bin
    sam build
  displayName: 'Building Serverless Application Model'
  continueOnError: false
